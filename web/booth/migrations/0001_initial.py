# Generated by Django 4.1.2 on 2023-02-07 15:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("player", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Booth",
            fields=[
                (
                    "id",
                    models.CharField(max_length=10, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=50)),
                (
                    "description",
                    models.TextField(blank=True, max_length=1000, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("health_score", models.IntegerField(blank=True, null=True)),
                ("skill_score", models.IntegerField(blank=True, null=True)),
                ("growth_score", models.IntegerField(blank=True, null=True)),
                ("relationship_score", models.IntegerField(blank=True, null=True)),
                ("joy_score", models.IntegerField(blank=True, null=True)),
                ("money", models.IntegerField(blank=True, null=True)),
                ("academic_levle", models.IntegerField(blank=True, null=True)),
                ("steps", models.IntegerField(blank=True, null=True)),
                (
                    "booth_admins",
                    models.ManyToManyField(
                        blank=True,
                        related_name="booth_admins",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "booth_in_charge",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="booth_in_charge",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BoothRequirement",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50)),
                ("health_score", models.IntegerField(default=0)),
                ("skill_score", models.IntegerField(default=0)),
                ("growth_score", models.IntegerField(default=0)),
                ("relationship_score", models.IntegerField(default=0)),
                ("joy_score", models.IntegerField(default=0)),
                ("money", models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="BoothScoring",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50)),
                ("health_score", models.IntegerField(blank=True, null=True)),
                ("skill_score", models.IntegerField(blank=True, null=True)),
                ("growth_score", models.IntegerField(blank=True, null=True)),
                ("relationship_score", models.IntegerField(blank=True, null=True)),
                ("joy_score", models.IntegerField(blank=True, null=True)),
                ("money", models.IntegerField(blank=True, null=True)),
                ("academic_level", models.IntegerField(blank=True, null=True)),
                ("steps", models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "type",
                    models.CharField(
                        choices=[("pay", "pay"), ("receive", "receive")], max_length=10
                    ),
                ),
                ("record_time", models.DateTimeField(auto_now_add=True)),
                ("money", models.IntegerField()),
                ("remarks", models.TextField(blank=True, max_length=1000, null=True)),
                (
                    "booth",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="booth.booth"
                    ),
                ),
                (
                    "marker",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="player.player"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Participation",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("record_time", models.DateTimeField(auto_now_add=True)),
                ("remarks", models.TextField(blank=True, max_length=1000, null=True)),
                (
                    "booth",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="booth.booth"
                    ),
                ),
                (
                    "marker",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="player.player"
                    ),
                ),
                (
                    "score",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="booth.boothscoring",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BoothTraffic",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("record_time", models.DateTimeField(auto_now_add=True)),
                (
                    "booth",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="booth.booth"
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="player.player"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="booth",
            name="score_options",
            field=models.ManyToManyField(
                blank=True, related_name="booth_scores", to="booth.boothscoring"
            ),
        ),
    ]
