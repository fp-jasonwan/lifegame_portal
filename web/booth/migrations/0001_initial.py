# Generated by Django 4.1.2 on 2025-01-27 15:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("player", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Booth",
            fields=[
                (
                    "id",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=50, verbose_name="攤位名稱")),
                (
                    "description",
                    models.TextField(blank=True, max_length=1000, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "health_score",
                    models.IntegerField(blank=True, null=True, verbose_name="健康分數"),
                ),
                (
                    "skill_score",
                    models.IntegerField(blank=True, null=True, verbose_name="技能分數"),
                ),
                (
                    "growth_score",
                    models.IntegerField(blank=True, null=True, verbose_name="成長分數"),
                ),
                (
                    "relationship_score",
                    models.IntegerField(blank=True, null=True, verbose_name="關係分數"),
                ),
                (
                    "money",
                    models.IntegerField(blank=True, null=True, verbose_name="金錢"),
                ),
                (
                    "academic_level",
                    models.IntegerField(blank=True, null=True, verbose_name="學歷"),
                ),
                ("steps", models.IntegerField(blank=True, null=True)),
                (
                    "booth_admins",
                    models.ManyToManyField(
                        blank=True,
                        related_name="booth_admins",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "booth_in_charge",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="booth_in_charge",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BoothRequirement",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50)),
                ("display_name", models.CharField(max_length=100)),
                ("health_score", models.IntegerField(default=0)),
                ("skill_score", models.IntegerField(default=0)),
                ("growth_score", models.IntegerField(default=0)),
                ("relationship_score", models.IntegerField(default=0)),
                ("money", models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="BoothScoring",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50, verbose_name="分數名稱")),
                (
                    "health_score",
                    models.IntegerField(
                        blank=True, default=0, null=True, verbose_name="健康分數"
                    ),
                ),
                (
                    "skill_score",
                    models.IntegerField(
                        blank=True, default=0, null=True, verbose_name="技能分數"
                    ),
                ),
                (
                    "growth_score",
                    models.IntegerField(
                        blank=True, default=0, null=True, verbose_name="成長分數"
                    ),
                ),
                (
                    "relationship_score",
                    models.IntegerField(
                        blank=True, default=0, null=True, verbose_name="關係分數"
                    ),
                ),
                (
                    "money",
                    models.IntegerField(
                        blank=True, default=0, null=True, verbose_name="金錢"
                    ),
                ),
                (
                    "academic_level",
                    models.IntegerField(
                        blank=True, default=0, null=True, verbose_name="學歷"
                    ),
                ),
                (
                    "steps",
                    models.IntegerField(
                        blank=True, default=-1, null=True, verbose_name="步數"
                    ),
                ),
                (
                    "flat",
                    models.IntegerField(
                        blank=True, default=0, null=True, verbose_name="樓宇"
                    ),
                ),
                (
                    "record_time",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.localtime,
                        verbose_name="時間",
                    ),
                ),
                ("active", models.BooleanField(default=True)),
                (
                    "booth",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="booth.booth",
                        verbose_name="攤位",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("pay", "付款"),
                            ("receive", "收款"),
                            ("deposit", "存款"),
                            ("withdrawal", "提款"),
                        ],
                        max_length=10,
                        verbose_name="交易類型",
                    ),
                ),
                (
                    "record_time",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.localtime,
                        verbose_name="時間",
                    ),
                ),
                ("money", models.IntegerField(default=0, verbose_name="金錢")),
                (
                    "interest_rate",
                    models.FloatField(blank=True, default=0, verbose_name="利率"),
                ),
                (
                    "booth",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="booth.booth",
                        verbose_name="攤位",
                    ),
                ),
                (
                    "marker",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="評分員",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="player.player",
                        verbose_name="玩家",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Participation",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "record_time",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.localtime,
                        verbose_name="時間",
                    ),
                ),
                (
                    "booth",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="booth.booth",
                        verbose_name="攤位",
                    ),
                ),
                (
                    "marker",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="評分員",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="player.player",
                        verbose_name="玩家",
                    ),
                ),
                (
                    "score",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="booth.boothscoring",
                        verbose_name="分數",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BoothTraffic",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "record_time",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.localtime
                    ),
                ),
                (
                    "booth",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="booth.booth"
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="player.player"
                    ),
                ),
            ],
        ),
    ]
